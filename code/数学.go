package code

// MyIsPalindrome /*****************************9.回文数start******************************/
// 判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。
// 示例 1:
// 输入: 121
// 输出: true
// 示例2:
// 输入: -121
// 输出: false
// 解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。
// 示例 3:
// 输入: 10
// 输出: false
// 解释: 从右向左读, 为 01 。因此它不是一个回文数
// */
func MyIsPalindrome(x int) bool {
	// 负数翻转不会相同,直接pass
	if x < 0 {
		return false
	}

	//弹出最后一位数,每次都乘10,组成新int
	var newX, tmp, oldX int
	oldX = x
	for x != 0 {
		tmp = x % 10
		newX = newX*10 + tmp
		x = x / 10
	}

	return newX == oldX
}

/*****************************9.回文数end******************************/
